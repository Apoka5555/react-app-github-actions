name: run js linters

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      use-cache:
        description: Whether to execute cache step
        type: boolean
        default: true
      node-version:
        description: Node version
        type: choice
        options:
          - 21.x
          - 22.x
          - 23.x
        default: 22.x

jobs:
  reusable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: js-lint
        run: npx eslint src --ext js,ts,tsx -f json -o lint.json

      - name: Annotate PR
        if: failure() && steps.js-lint.conclusion == 'failure'
        uses: actions/github-script@v7
        with:
          # github-token: ${{ steps.app-token.outputs.token }}
          script: |
            try {
              const fs = require('node:fs');
              const report = JSON.parse(fs.readFileSync('./lint.json', 'utf-8'));

              report.flatMap(entry => entry.messages.map(message => {
                core.error(message.message, {
                  title: message.ruleId,
                  file: entry.filePath.replace(`${process.env.GITHUB_WORKSPACE}/`, ''),
                  startLine: message.line,
                  endLine: message.endLine || message.line,
                  startColumn: message.column,
                  endColumn: message.endColumn || message.column
                });
              }));
            } catch (error) {
              core.error(`PR annotation failed with error: ${error}`);
              core.setFailed(error);
            }

      - name: Archive linter results
        id: archive-linter-results
        uses: actions/upload-artifact@v4
        with:
          name: lint
          path: ./lint.json
